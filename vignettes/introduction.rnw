%\VignetteIndexEntry{ssde}
%\VignetteKeywords{Single Sample Differential Expression}
%\VignettePackage{ssde}

\documentclass[12pt]{article}

\usepackage{amsmath}
\usepackage{times}
\usepackage{hyperref}
\usepackage[numbers]{natbib}

\renewcommand{\topfraction}{0.85}
\renewcommand{\textfraction}{0.1}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rexpression}[1]{\texttt{#1}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}


\title{Introduction to Single Sample Differential Expression Analysis Using ssde}
\author{Hongxu Ding\\Department of Pharmacy Practice and Science, University of Arizona}
\date{\today}


\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle
\tableofcontents

%------------------------------------------------------------
\section{Introduction}
%------------------------------------------------------------ 

ssde is an R package for differential gene expression (DE) analysis between two single samples. Specifically, ssde prioritizes genes that are overdispersed when comparing the test and control expression profiles. ssde is able to recapitulate a decent amount of ground-truth genes determined from regular DE analyses. ssde thus provides a reasonable compromise for DE analysis when only single samples are available.

%------------------------------------------------------------
\section{Installation}
%------------------------------------------------------------ 

\Rpackage{ssde} requires packages \Rpackage{bcellViper} to run the example. After installing R, it can be obtained with:

\begin{verbatim}
if (!requireNamespace("BiocManager", quietly=TRUE)) install.packages("BiocManager")
BiocManager::install("bcellViper")
\end{verbatim}

%------------------------------------------------------------
\section{Single Sample Differential Expression Analysis}
%------------------------------------------------------------ 

%------------------------------------------------------------
\subsection{Data Preparation}
%------------------------------------------------------------ 

<<data>>=
library(ssde)
library(bcellViper)
data(bcellViper)

hd <- rownames(dset@phenoData@data)[dset@phenoData@data$description == "HD"]
hd <- dset@assayData$exprs[, hd]
pdlcl <- rownames(dset@phenoData@data)[dset@phenoData@data$description == "pDLCL"]
pdlcl <- dset@assayData$exprs[, pdlcl]
# expression matrix for HD and pDLCL samples

pca <- prcomp(t(cbind(hd, pdlcl)))
plot(pca$x[, 1:2], col = c(rep(1, ncol(hd)), rep(2, ncol(pdlcl))))
legend("bottomleft", legend = c("HD", "pDLCL"), text.col = 1:2, bty = "n")
# PCA plot
@

%------------------------------------------------------------
\subsection{ssde}
%------------------------------------------------------------ 

\Rfunction{ssde()} is the main function for performing single sample differential expression analysis.

<<ssde>>=
x <- hd[, "GSM44113"]
y <- pdlcl[, "GSM44246"]
res <- ssde(x, y, k=1, h=0, epoch=1000)
# ssde analysis
@

\noindent
Next, we show the ssde dvalue vs pvalue on a scatterplot.

<<pd>>=
color <- rep(8, nrow(hd))
color[res$pvalue <= 0.01 & res$dvalue < 3] <- 4
color[res$pvalue <= 0.01 & res$dvalue >= 3] <- 2
color[res$pvalue > 0.01 & res$dvalue >= 3] <- 6
plot(res$dvalue, unlist(lapply(res$pvalue, function(p) min(5, -log10(p)))),
     col = color, cex = 0.2, xlab = "dvalue", ylab = "-log10(pvalue)")
abline(NULL, NULL, 2, 3, col = 1, lty = 2, lwd = 1)
#ssde d-value vs p-value
@

\noindent
We then show the ssde results on the x-y scatterplot.

<<xy>>=
plot(x, y, xlab = "GSM44113", ylab = "GSM44246", col = color, cex = 0.2)
abline(res$h, res$k, NULL, NULL)
legend("bottomleft", legend = c(paste("k=", signif(res$k, 2), sep=""),
                                paste("h=", signif(res$h, 2), sep="")), bty = "n")
# x-y scatterplot
@

%------------------------------------------------------------
\subsection{Regular DE}
%------------------------------------------------------------ 

We perform the regular multiple sample-multiple sample DE analysis as the groundtruth.

<<de>>=
p <- structure(unlist(lapply(1:nrow(hd), function(i, hd, pdlcl){
  t.test(hd[i, ], pdlcl[i, ], alternative="two.sided")$p.value
}, hd=hd, pdlcl=pdlcl)), names=rownames(hd))
fc <- log2(rowMeans(hd)/rowMeans(pdlcl))
# t-test p-value and log2(fc)
@

%------------------------------------------------------------
\subsection{Regular DE VS ssde}
%------------------------------------------------------------ 

To cross-compare, we show the ssde results on the regular DE volcano plot.

<<volcano>>=
cex <- unlist(lapply(res$dvalue, function(x) max(0.2, (sqrt(x) - 1))))
plot(fc, -log10(p), cex = cex, col = color, xlab = "log2(fc)", ylab = "-log10(p)")
legend("topright", legend = c("d=0", "d=3", "d=6"), pch = 1, pt.cex = c(0.4, 1.7, 2.4), bty = "n")
# volcano plot
@

\noindent
We then perform the ROC analysis.

<<roc>>=
cp <- rownames(hd)[p <= 0.01 & abs(fc) >= 1]
cn <- rownames(hd)[p > 0.01 | abs(fc) < 1]
roc <- do.call(rbind, lapply(seq(0, -5, -0.1), function(i, res, cp, cn){
  do.call(rbind, lapply(seq(0, 5, 0.1), function(j, i, res, cp, cn){
    pp <- names(res$dvalue)[res$dvalue >= j & res$pvalue <= 10^i]
    tpr <- length(intersect(cp, pp))/length(cp)
    fpr <- length(setdiff(pp, cp))/length(cn)
    structure(c(tpr, fpr), names=c("tpr", "fpr"))
  }, i=i, res=res, cp=cp, cn=cn))
}, res=res, cp=cp, cn=cn))
plot(roc[, "fpr"], roc[, "tpr"], xlim = c(0, 1), ylim = c(0, 1), xlab = "FPR", ylab = "TPR")
abline(0, 1, NULL, NULL)
legend("bottomright", legend = c("P: p<0.01 & abs(fc)>1", "N: p>0.01 | abs(fc)<1"), bty = "n")
@

%------------------------------------------------------------
\subsection{Session Information}
%------------------------------------------------------------ 

<<session_information>>=
sessionInfo()
@

\clearpage

\end{document}

